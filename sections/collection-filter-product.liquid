<style>
  #shopify-section-template--19116298961206__product-grid {
    margin-top: 100px;
  }

  form.filter-form {
    float: left;
    min-width: 20vw;
    max-width: 20vw;
    padding: 0 25px 0 20px;
  }
  details.filter-group:first-of-type {
    padding-top: 0;
  }

  summary {
    /* display: list-item; */
    cursor: pointer;
    display: flex;
    font-size: 20px;
  }
  summary.filter-group-summary:after {
    content: "+";
    margin-left: auto;
    font-size: 20px;
  }
  .filter-group[open] .filter-group-summary:after {
    content: "-";
  }
  details.filter-group {
    border-bottom: 2px solid black;
    padding: 15px 0;
  }
  .filter-group-display {
    padding-left: 20px;
  }
  ul.filter-group-display__list {
    list-style: none;
  }
  ul.filter-group-display__list input[type=checkbox] {
    margin-right: 8px;
  }
  .filter-group-display__price-range {
    margin-left: 13px;
  }
  .filter-group-display__price-range-from {
    margin-top: 10px;
    margin-bottom: 10px;
  }
  .filter-group-display__price-range-to {
    margin-bottom: 10px;
  }
  .filter-group-display input[type="submit"] {
    background: black;
    color: white;
    border: white;
    padding: 8px 15px;
  }
  .product-box {
    display: flex;
    flex-wrap: wrap;
  }
  .product-card {
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    margin: 20px 28px 20px 0;
    min-width: 150px;
    border: 1px solid #939393;
    transition: transform 0.5s;
    cursor: pointer;
  }
  .product-card:hover {
    transform: scale(1.05);
  }
  .product-card img {
    width: 240px;
    height: 300px;
    margin: 10px;
    border-radius: 13px;
  }
  p.p-price {
    font-family: 'Roboto', 'sans-serif';
    font-weight: 400;
    margin-bottom: 15px;
  }
  p.p-name {
    font-size: 25px;
    font-family: 'Roboto', 'sans-serif';
    font-weight: 400;
    margin-bottom: 4px;
  }
  .active-filters {
    margin-top: 13px;
    display: flex;
    flex-direction: column-reverse;
  }
  a.active-filters__clear {
    text-decoration: none;
    color: black;
    border: 1px solid black;
    padding: 4px 5px;
    width: 70px;
  }
  a.active-filters__clear:hover {
    color: #787878;
    border-color: #787878;
  }
  a.active-filters__remove-filter {
    text-decoration: none;
    color: black;
    padding-left: 27px;
  }

  a.active-filters__remove-filter {
    margin-bottom: 10px;
    margin-top: -10px;
  }
  select#sort-by {
    padding: 5px 10px;
  }
  select#sort-by {
    border: 1px solid #8b8b8b;
  }
  @media(max-width:1449px) {
    .product-box {
      justify-content: space-evenly;
    }

    .product-card {
      margin-top: 10px;
    }
  }
</style>

<div class="catalog-container">
  <form class="filter-form">
    {% for filter in collection.filters %}
      <details class="filter-group">
        <summary class="filter-group-summary">
          <div>
            <span>{{ filter.label }}</span>
            {% if filter.active_values.size > 0 %}
              <span>({{ filter.active_values.size }})</span>
            {% endif %}
          </div>
        </summary>

        <div class="filter-group-display">
          <div class="filter-group-display__header">
            <span class="filter-group-display__header-selected">{{ filter.active_values.size }} selected</span>
            {% if filter.active_values.size > 0 %}
              <a href="{{ filter.url_to_remove }}" class="filter-group-display__header-reset">Reset</a>
            {% endif %}
          </div>

          {% case filter.type %}
            {% when 'boolean', 'list' %}
              <ul class="filter-group-display__list">
                {% for filter_value in filter.values %}
                  <li class="filter-group-display__list-item">
                    <label for="Filter-{{ filter.param_name }}-{{ forloop.index }}">
                      <input type="checkbox"
                        name="{{ filter_value.param_name }}"
                        value="{{ filter_value.value }}"
                        id="Filter-{{ filter.param_name }}-{{ forloop.index }}"
                        {% if filter_value.active %}checked{% endif %}
                        {% if filter_value.count == 0 and filter_value.active == false %}disabled{% endif %}
                      >{{ filter_value.label }}
                    </label>
                  </li>
                {% endfor %}
              </ul>

            {% when 'price_range' %}
              <div class="filter-group-display__price-range">
                <div class="filter-group-display__price-range-from">
                  <span>{{ cart.currency.symbol }}</span>
                  <input name="{{ filter.min_value.param_name }}"
                    id="Filter-{{ filter.min_value.param_name }}"
                    {% if filter.min_value.value %}
                      value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                    {% endif %}
                    type="number"
                    placeholder="0"
                    min="0"
                    max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                  >
                  <label for="Filter-{{ filter.min_value.param_name }}">From</label>
                </div>
                <div class="filter-group-display__price-range-to">
                  <span>{{ cart.currency.symbol }}</span>
                  <input name="{{ filter.max_value.param_name }}"
                    id="Filter-{{ filter.max_value.param_name }}"
                    {% if filter.max_value.value %}
                      value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                    {% endif %}
                    type="number"
                    placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                    min="0"
                    max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                  >
                  <label for="Filter-{{ filter.max_value.param_name }}">To</label>
                </div>
              </div>
          {% endcase %}
        </div>
      </details>
    {% endfor %}

    <div class="active-filters">
      <a href="{{ collection.url }}?sort_by={{ collection.sort_by }}" class="active-filters__clear" id="clear-all">Clear all</a>
      {% for filter in collection.filters %}
        {% if filter.type == "price_range" %}
          {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
            <a class="active-filters__remove-filter" href="{{ filter.url_to_remove }}">
              {%- assign min_value = filter.min_value.value | default: 0 -%}
              {%- assign max_value = filter.max_value.value | default: filter.range_max -%}
              {{ min_value | money }} - {{ max_value | money }} X
            </a>
          {%- endif -%}
        {%- else -%}
          {%- for filter_value in filter.active_values -%}
            <a class="active-filters__remove-filter" href="{{ filter_value.url_to_remove }}">
              {{ filter.label }}: {{ filter_value.label }} X
            </a>
          {%- endfor -%}
        {%- endif- %}
      {%- endfor -%}
    </div>
  </form>


  <div class="product-lists">
    <select id="sort-by">
    {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

    {% for option in collection.sort_options %}
      <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
        {{ option.name }}
      </option>
    {% endfor %}
  </select>

  {% paginate collection.products by 20 %}
    <div class="product-box">
    {% for product in collection.products %}
        <div class="product-card">
        <p class="p-price">{{ product.price | money }}</p>
        <p class="p-name">{{ product.title}}</p>
      
      {% for image in product.images limit:1 %}
        <img src="{{ image | img_url:"600x600" }}">
      {% endfor %}
      </div>
    {% endfor %}
    {{ paginate | default_pagination }}
    </div>
  {% endpaginate %}
  </div>
</div>

<script>
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function(e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });

  $(function(){
    $('body').on('change','form.filter-form input', function(){
      updateProductLists(getDataQuery());
    });
    function getDataQuery(){
      var dataResult = '?';
      var input_name = '';
      var input_value = '';
      var input_query = '';
      var dataInputLists = [];
      $('form.filter-form input:checked,form.filter-form input[type="number"]').each(function(index){
        input_name = $(this).attr('name');
        $(this).checked ? input_value = $(this).attr('value').toString() : input_value = $(this).val().toString();
        dataInputLists.length != 0 ? input_query = `&${input_name}=${input_value}` : input_query = `${input_name}=${input_value}`;
        dataResult += input_query;
        dataInputLists.push(input_query);
        console.log(dataInputLists);
        console.log(dataResult);

      });
      console.log(window.location.protocol + '//' + window.location.host + window.location.pathname + dataResult)
      return window.location.protocol + '//' + window.location.host + window.location.pathname + dataResult;
    }; 
    function updateProductLists(url) {
      console.log(url)
      var target = url;
      $.get(target, function(data, status){
          var dataOutput = $(data).find('.product-lists').html();
          $('.catalog-container .product-lists').html(dataOutput);
          console.log(dataOutput)
      });
    }
    function updateFilterLabel(url){
      var target = url;
      $.get(target,function(data, status){
        var dataOutputs = [];
        $(data).find('.filter-group-display__header-selected').each(function(index){
          dataOutputs[index] = $(this).html();
          console.log(dataOutputs[index]);
        });
        $('.catalog-container .filter-group-display__header-selected').each(function(index){
          $(this).html(dataOutputs[index]);
          console.log('success'+dataOutputs[index]);
        });
      });
    }

  });
</script>